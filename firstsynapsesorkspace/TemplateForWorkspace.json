{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "firstsynapsesorkspace"
		},
		"LS_ASQL_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_ASQL'"
		},
		"firstsynapsesorkspace-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'firstsynapsesorkspace-WorkspaceDefaultSqlServer'"
		},
		"LS_ABLB_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "ABLB-XML-CONN"
		},
		"LS_KV_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://dgs-kv.vault.azure.net/"
		},
		"LS_SQL_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "ASQL-DB-CONNECTION"
		},
		"firstsynapsesorkspace-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dlgstor.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/ABLBCOPYASQL')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "uisng linked service ",
				"activities": [
					{
						"name": "Copy from Blob to Azure SQL table",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ABLB",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DS_ABLB')]",
				"[concat(variables('workspaceId'), '/datasets/DS_ASQL')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Delete files older than 3 Minutes')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Please input a folder path as the parameter for this pipeline, and the pipeline will delete files which were last modified more than 30 days ago under the particular folder path.",
				"activities": [
					{
						"name": "DeleteFiles",
						"description": "Connect to your storage account to save the log file.",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "BinaryDatasetForDeleteActivity",
								"type": "DatasetReference",
								"parameters": {
									"FolderPath": {
										"value": "@pipeline().parameters.SourceFolder",
										"type": "Expression"
									},
									"Directory": {
										"value": "@pipeline().parameters.SourceDirectory",
										"type": "Expression"
									}
								}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "LS_ABLB",
									"type": "LinkedServiceReference"
								},
								"path": {
									"value": "@pipeline().parameters.LoggingPath",
									"type": "Expression"
								}
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"modifiedDatetimeEnd": {
									"value": "@{addMinutes(pipeline().TriggerTime, -3)}",
									"type": "Expression"
								},
								"wildcardFileName": "*"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceFolder": {
						"type": "string",
						"defaultValue": "source"
					},
					"SourceDirectory": {
						"type": "string",
						"defaultValue": "test"
					},
					"LoggingPath": {
						"type": "string",
						"defaultValue": "log/test"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/BinaryDatasetForDeleteActivity')]",
				"[concat(variables('workspaceId'), '/linkedServices/LS_ABLB')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PL_SENTIMENT_ANAYSIS')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Feedback records",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DS_ABLB_FEEDBACK_IN",
								"type": "DatasetReference",
								"parameters": {
									"SpecCode": {
										"value": "@pipeline().parameters.SpecCode",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Feedback",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Feedback records",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Feedback records').output.value\n\n",
								"type": "Expression"
							},
							"batchCount": 10,
							"activities": [
								{
									"name": "Sentiment Analysis",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://dsp2021-sentiment.cognitiveservices.azure.com/text/analytics/v3.0/sentiment",
										"method": "POST",
										"headers": {
											"Ocp-Apim-Subscription-Key": "6dbd673a9cf645e89fcb8c0cf1fd751b",
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@concat('{\"documents\":[\n\t                     {\n\t\t\t\t\t\t  \"language\": \"en\",\"id\": \"',\n\t                         item().CustomerID ,\n\t\t\t\t\t\t\t'\", \"text\": \"' , item().Feedback ,'\"\n\t\t\t\t\t\t }\n\t\t\t\t\t\t ]\n\t\t\t\t\t\t }')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Results",
									"type": "AppendVariable",
									"dependsOn": [
										{
											"activity": "Sentiment Analysis",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "SentimentAnalysis",
										"value": {
											"value": "@json(concat('{\"id\":','\"',activity('Sentiment Analysis').output.documents[0].id,\n'\",\"sentiment\": \"',activity('Sentiment Analysis').output.documents[0].sentiment ,\n'\" }'))",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Writing To blob",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "For Each Feedback",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set rundate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://azdemostor.blob.core.windows.net/feedback-staging/' ,pipeline().parameters.FileName,'_',variables('FileNameWithTimeStamp'),'.json')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "PUT",
							"headers": {
								"x-ms-version": "2017-11-09",
								"x-ms-blob-type": "BlockBlob"
							},
							"body": {
								"value": "@variables('SentimentAnalysis')",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://storage.azure.com/"
							}
						}
					},
					{
						"name": "Data Flow",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Writing To blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CustomerData",
								"type": "DataFlowReference",
								"parameters": {
									"SpecCode": "'feedback'",
									"Runtime": "'123456_123456'",
									"FileName": "'CustomerFeedbacks.csv'"
								},
								"datasetParameters": {
									"CustomerFeedback": {
										"SpecCode": {
											"value": "@pipeline().parameters.SpecCode",
											"type": "Expression"
										}
									},
									"SentimentalAnalysis": {
										"SpecCode": {
											"value": "@pipeline().parameters.SpecCode",
											"type": "Expression"
										}
									},
									"sinkBLOB": {
										"SpecCode": {
											"value": "@pipeline().parameters.SpecCode",
											"type": "Expression"
										}
									},
									"SinkSQLTable": {
										"TableName": "feedbackreport",
										"SchemaName": "dbo"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Set rundate",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "FileNameWithTimeStamp",
							"value": {
								"value": "@substring(replace(replace(replace(pipeline().TriggerTime,'-',''),':',''),'T','_'),0,15)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SpecCode": {
						"type": "string",
						"defaultValue": "feedback"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "Customer Feedback"
					}
				},
				"variables": {
					"SentimentAnalysis": {
						"type": "Array"
					},
					"FileNameWithTimeStamp": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SentimentAnalysis"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DS_ABLB_FEEDBACK_IN')]",
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/dataflows/CustomerData')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/XML001')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy Simple XML File",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"detectDataType": true,
									"namespaces": false
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "['author']"
										},
										"sink": {
											"type": "String",
											"ordinal": 1
										}
									},
									{
										"source": {
											"path": "['title']"
										},
										"sink": {
											"type": "String",
											"ordinal": 2
										}
									},
									{
										"source": {
											"path": "['genre']"
										},
										"sink": {
											"type": "String",
											"ordinal": 3
										}
									},
									{
										"source": {
											"path": "['price']"
										},
										"sink": {
											"type": "Double",
											"ordinal": 4
										}
									},
									{
										"source": {
											"path": "['publish_date']"
										},
										"sink": {
											"type": "String",
											"ordinal": 5
										}
									},
									{
										"source": {
											"path": "['description']"
										},
										"sink": {
											"type": "String",
											"ordinal": 6
										}
									},
									{
										"source": {
											"path": "['@id']"
										},
										"sink": {
											"type": "String",
											"ordinal": 7
										}
									}
								],
								"collectionReference": "$['catalog']['book']",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "DS_COMPLEX_XML",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "File1.xml",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_CSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"outputfile": {
						"type": "string",
						"defaultValue": "file1.csv"
					}
				},
				"folder": {
					"name": "XML"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DS_COMPLEX_XML')]",
				"[concat(variables('workspaceId'), '/datasets/DS_CSV')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/XML002')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy Simple XML File",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"detectDataType": true,
									"namespaces": false
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "['author']"
										},
										"sink": {
											"type": "String",
											"ordinal": 1
										}
									},
									{
										"source": {
											"path": "['title']"
										},
										"sink": {
											"type": "String",
											"ordinal": 2
										}
									},
									{
										"source": {
											"path": "['genre']"
										},
										"sink": {
											"type": "String",
											"ordinal": 3
										}
									},
									{
										"source": {
											"path": "['price']"
										},
										"sink": {
											"type": "Double",
											"ordinal": 4
										}
									},
									{
										"source": {
											"path": "['publish_date']"
										},
										"sink": {
											"type": "String",
											"ordinal": 5
										}
									},
									{
										"source": {
											"path": "['description']"
										},
										"sink": {
											"type": "String",
											"ordinal": 6
										}
									},
									{
										"source": {
											"path": "['languages']['language']"
										},
										"sink": {
											"type": "String",
											"ordinal": 7
										}
									},
									{
										"source": {
											"path": "['@id']"
										},
										"sink": {
											"type": "String",
											"ordinal": 8
										}
									}
								],
								"collectionReference": "$['catalog']['book']",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "DS_COMPLEX_XML",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "File2.xml",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_CSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"outfpufile": {
						"type": "string",
						"defaultValue": "file2.csv"
					}
				},
				"folder": {
					"name": "XML"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DS_COMPLEX_XML')]",
				"[concat(variables('workspaceId'), '/datasets/DS_CSV')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/XML003')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy Simple XML File",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"detectDataType": true,
									"namespaces": false
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "['author']"
										},
										"sink": {
											"type": "String",
											"ordinal": 1
										}
									},
									{
										"source": {
											"path": "['title']"
										},
										"sink": {
											"type": "String",
											"ordinal": 2
										}
									},
									{
										"source": {
											"path": "['genre']"
										},
										"sink": {
											"type": "String",
											"ordinal": 3
										}
									},
									{
										"source": {
											"path": "['price']"
										},
										"sink": {
											"type": "Double",
											"ordinal": 4
										}
									},
									{
										"source": {
											"path": "['publish_date']"
										},
										"sink": {
											"type": "String",
											"ordinal": 5
										}
									},
									{
										"source": {
											"path": "['description']"
										},
										"sink": {
											"type": "String",
											"ordinal": 6
										}
									},
									{
										"source": {
											"path": "['languages']['language']"
										},
										"sink": {
											"type": "String",
											"ordinal": 7
										}
									},
									{
										"source": {
											"path": "['@id']"
										},
										"sink": {
											"type": "String",
											"ordinal": 8
										}
									}
								],
								"collectionReference": "$['catalog']['book']",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "DS_COMPLEX_XML",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "File3.xml",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_CSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"outputfile": {
						"type": "string",
						"defaultValue": "file3.csv"
					}
				},
				"folder": {
					"name": "XML"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DS_COMPLEX_XML')]",
				"[concat(variables('workspaceId'), '/datasets/DS_CSV')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/XML004')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy Simple XML File",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"detectDataType": true,
									"namespaces": false
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['catalog']['book'][0]['author']"
										},
										"sink": {
											"type": "String",
											"ordinal": 1
										}
									},
									{
										"source": {
											"path": "$['catalog']['book'][0]['title']"
										},
										"sink": {
											"type": "String",
											"ordinal": 2
										}
									},
									{
										"source": {
											"path": "$['catalog']['book'][0]['genre']"
										},
										"sink": {
											"type": "String",
											"ordinal": 3
										}
									},
									{
										"source": {
											"path": "$['catalog']['book'][0]['price']"
										},
										"sink": {
											"type": "double",
											"ordinal": 4
										}
									},
									{
										"source": {
											"path": "$['catalog']['book'][0]['publish_date']"
										},
										"sink": {
											"type": "date",
											"ordinal": 5
										}
									},
									{
										"source": {
											"path": "$['catalog']['book'][0]['description']"
										},
										"sink": {
											"type": "String",
											"ordinal": 6
										}
									},
									{
										"source": {
											"path": "$['catalog']['book'][0]['languages']['language']"
										},
										"sink": {
											"type": "String",
											"ordinal": 7
										}
									},
									{
										"source": {
											"path": "$['catalog']['book'][0]['@id']"
										},
										"sink": {
											"ordinal": 8
										}
									}
								],
								"collectionReference": "",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "DS_COMPLEX_XML",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "File3.xml",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_CSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"outputfile": {
						"type": "string",
						"defaultValue": "file3.csv"
					}
				},
				"folder": {
					"name": "XML"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DS_COMPLEX_XML')]",
				"[concat(variables('workspaceId'), '/datasets/DS_CSV')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/XML004_1')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy Simple XML File",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"detectDataType": true,
									"namespaces": false
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['catalog']['book'][0]['author']"
										},
										"sink": {
											"type": "String",
											"ordinal": 1
										}
									},
									{
										"source": {
											"path": "$['catalog']['book'][0]['title']"
										},
										"sink": {
											"type": "String",
											"ordinal": 2
										}
									},
									{
										"source": {
											"path": "$['catalog']['book'][0]['languages']['language']"
										},
										"sink": {
											"type": "String",
											"ordinal": 3
										}
									}
								],
								"collectionReference": "$['catalog']['book']",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "DS_COMPLEX_XML",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "File3.xml",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_CSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"outputfile": {
						"type": "string",
						"defaultValue": "file3.csv"
					}
				},
				"folder": {
					"name": "XML"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DS_COMPLEX_XML')]",
				"[concat(variables('workspaceId'), '/datasets/DS_CSV')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/XML005')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Data flow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_ComplexXML",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceXML": {
										"FileName": "file3.csv"
									},
									"sinkBlobBookLanguage": {},
									"sinkBlobBookType": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "XML"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/df_ComplexXML')]",
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/BinaryDatasetForDeleteActivity')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Connect to your source store to delete files.",
				"linkedServiceName": {
					"referenceName": "LS_ABLB",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FolderPath": {
						"type": "string"
					},
					"Directory": {
						"type": "string"
					}
				},
				"folder": {
					"name": "All dss"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().Directory",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().FolderPath",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/LS_ABLB')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_ABLB')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ABLB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "All dss"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Customer Feedback.csv",
						"folderPath": "test",
						"container": "source"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "Product ",
						"type": "String"
					},
					{
						"name": "Feedback",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/LS_ABLB')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_ABLB_FEEDBACK_IN')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ABLB",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SpecCode": {
						"type": "string",
						"defaultValue": "feedback"
					}
				},
				"folder": {
					"name": "SentimentAnalysis"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Customer Feedback.csv",
						"container": {
							"value": "@concat(dataset().SpecCode,'-in')",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "Product ",
						"type": "String"
					},
					{
						"name": "Feedback",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/LS_ABLB')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_ABLB_FIANL')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ABLB",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SpecCode": {
						"type": "string",
						"defaultValue": "feedback"
					}
				},
				"folder": {
					"name": "SentimentAnalysis"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": {
							"value": "@dataset().SpecCode",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/LS_ABLB')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_ABLB_JSON')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ABLB",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SpecCode": {
						"type": "string",
						"defaultValue": "feedback"
					}
				},
				"folder": {
					"name": "SentimentAnalysis"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "*.json",
						"container": {
							"value": "@concat(dataset().SpecCode,'-staging')",
							"type": "Expression"
						}
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"sentiment": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/LS_ABLB')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_ADL')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "firstsynapsesorkspace-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "All dss"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "test",
						"fileSystem": "source"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/firstsynapsesorkspace-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_ASQL')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "All dss"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "CustomerFeedback"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/LS_SQL')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_ASQL_DF')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "string",
						"defaultValue": "feedbackreport"
					},
					"SchemaName": {
						"type": "string",
						"defaultValue": "dbo"
					}
				},
				"folder": {
					"name": "SentimentAnalysis"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/LS_SQL')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_COMPLEX_XML')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ABLB",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "XML"
				},
				"annotations": [],
				"type": "Xml",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"container": "xmldemo"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/LS_ABLB')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_CSV')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ABLB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "XML"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "test.csv",
						"container": "xmldemoout"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/LS_ABLB')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_XML_ASQL')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ASQL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "XML"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "tabllanguage"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/LS_ASQL')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Dataset')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ABLB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "All dss"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Customer Feedback.csv",
						"folderPath": "test",
						"container": "source"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/LS_ABLB')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Dataset1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "firstsynapsesorkspace-WorkspaceDefaultSqlServer",
					"type": "LinkedServiceReference",
					"parameters": {
						"DBName": "SQLDedicatedPoolDemo"
					}
				},
				"folder": {
					"name": "All dss"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"tableName": "dbo.test"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/firstsynapsesorkspace-WorkspaceDefaultSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Ds_Dedeicatedpool')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "firstsynapsesorkspace-WorkspaceDefaultSqlServer",
					"type": "LinkedServiceReference",
					"parameters": {
						"DBName": "dedicatedSQLpool"
					}
				},
				"folder": {
					"name": "All dss"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Product",
						"type": "varchar"
					},
					{
						"name": "Feedback",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"tableName": "dbo.test4"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/firstsynapsesorkspace-WorkspaceDefaultSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/LS_ABLB')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "LS_KV",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('LS_ABLB_properties_typeProperties_connectionString_secretName')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/linkedServices/LS_KV')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/LS_ASQL')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_ASQL_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "LS_KV",
							"type": "LinkedServiceReference"
						},
						"secretName": "ASQL-XML-PASS"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/linkedServices/LS_KV')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/LS_KV')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('LS_KV_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/LS_SQL')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "LS_KV",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('LS_SQL_properties_typeProperties_connectionString_secretName')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/linkedServices/LS_KV')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/firstsynapsesorkspace-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('firstsynapsesorkspace-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/firstsynapsesorkspace-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('firstsynapsesorkspace-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ABLBCopyASQL')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-01-29T14:42:00Z",
						"endTime": "2022-05-07T20:52:44Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								5
							],
							"hours": [
								10
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CustomerData')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "SentimentAnalysis"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ABLB_FEEDBACK_IN",
								"type": "DatasetReference"
							},
							"name": "CustomerFeedback"
						},
						{
							"dataset": {
								"referenceName": "DS_ABLB_JSON",
								"type": "DatasetReference"
							},
							"name": "SentimentalAnalysis"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_ABLB_FIANL",
								"type": "DatasetReference"
							},
							"name": "sinkBLOB"
						},
						{
							"dataset": {
								"referenceName": "DS_ASQL_DF",
								"type": "DatasetReference"
							},
							"name": "SinkSQLTable"
						}
					],
					"transformations": [
						{
							"name": "Join"
						},
						{
							"name": "GroupBySentiment"
						}
					],
					"script": "parameters{\n\tSpecCode as string ('feedback'),\n\tRuntime as string ('123456_123456'),\n\tFileName as string ('test.csv')\n}\nsource(output(\n\t\tCustomerID as string,\n\t\t{Product } as string,\n\t\tFeedback as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\twildcardPaths:['*.csv']) ~> CustomerFeedback\nsource(output(\n\t\tid as string,\n\t\tsentiment as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'documentPerLine',\n\tpreferredIntegralType: 'integer',\n\twildcardPaths:['*.json']) ~> SentimentalAnalysis\nCustomerFeedback, SentimentalAnalysis join(CustomerID == id,\n\tjoinType:'inner',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> Join\nJoin aggregate(groupBy(sentiment),\n\ttotal = count(sentiment)) ~> GroupBySentiment\nGroupBySentiment sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:[(concat($FileName,'_', $Runtime,'.csv'))],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1,\n\tpartitionBy('hash', 1)) ~> sinkBLOB\nJoin sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tCustomerID,\n\t\t{Product },\n\t\tFeedback,\n\t\tsentiment\n\t)) ~> SinkSQLTable"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DS_ABLB_FEEDBACK_IN')]",
				"[concat(variables('workspaceId'), '/datasets/DS_ABLB_JSON')]",
				"[concat(variables('workspaceId'), '/datasets/DS_ABLB_FIANL')]",
				"[concat(variables('workspaceId'), '/datasets/DS_ASQL_DF')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/df_ComplexXML')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "XML"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_COMPLEX_XML",
								"type": "DatasetReference"
							},
							"name": "sourceXML"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_CSV",
								"type": "DatasetReference"
							},
							"name": "sinkBlobBookLanguage"
						},
						{
							"dataset": {
								"referenceName": "DS_CSV",
								"type": "DatasetReference"
							},
							"name": "sinkBlobBookType"
						}
					],
					"transformations": [
						{
							"name": "flattenLanguages"
						},
						{
							"name": "flattenType"
						}
					],
					"scriptLines": [
						"source(output(",
						"          catalog as (book as ({@id} as string, author as string, description as string, genre as string, languages as (language as string[]), price as double, publish_date as date, title as string, types as ({_value_} as string, type as string[]))[])",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     validationMode: 'none',",
						"     namespaces: true,",
						"     wildcardPaths:[('File3.xml')]) ~> sourceXML",
						"sourceXML foldDown(unroll(catalog.book.languages.language, catalog.book.languages.language),",
						"     mapColumn(",
						"          language = catalog.book.languages.language,",
						"          author = catalog.book.author,",
						"          title = catalog.book.title",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> flattenLanguages",
						"sourceXML foldDown(unroll(catalog.book.types.type),",
						"     mapColumn(",
						"          type = catalog.book.types.type,",
						"          price = catalog.book.price,",
						"          title = catalog.book.title",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> flattenType",
						"flattenLanguages sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Column_1 as string,",
						"          Column_2 as string,",
						"          Column_3 as string,",
						"          Column_4 as string,",
						"          Column_5 as string,",
						"          Column_6 as string,",
						"          Column_7 as string",
						"     ),",
						"     partitionFileNames:[('file3Lan.csv')],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sinkBlobBookLanguage",
						"flattenType sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Column_1 as string,",
						"          Column_2 as string,",
						"          Column_3 as string,",
						"          Column_4 as string,",
						"          Column_5 as string,",
						"          Column_6 as string,",
						"          Column_7 as string",
						"     ),",
						"     partitionFileNames:[('file3Type.csv')],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sinkBlobBookType"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DS_COMPLEX_XML')]",
				"[concat(variables('workspaceId'), '/datasets/DS_CSV')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQLSCRIPT_Serverlesspool')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "-- This is auto-generated code\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://dlgstor.dfs.core.windows.net/source/test/Customer Feedback.csv',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0'\n    ) AS [result]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL_Script_DedicatedPool')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.objects O JOIN sys.schemas S ON O.schema_id = S.schema_id WHERE O.NAME = 'AzureDemo' AND O.TYPE = 'U' AND S.NAME = 'dbo')\nCREATE TABLE dbo.AzureDemo\n    (\n     [CustomerID] int,\n     [Product] varchar(100),\n     [Feedback] varchar(4000)   \n    )\n\nGO\n\nCOPY INTO dbo.AzureDemo\n([CustomerID] ,[Product], [Feedback])\nFROM 'https://dlgstor.dfs.core.windows.net/source/test/Customer Feedback.csv'\nWITH\n(\n    FILE_TYPE = 'CSV'\n     , FIRSTROW = 2\n    ,IDENTITY_INSERT = 'OFF'\n)\n\n\n-- Select * from dbo.AzureDemo",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "dedicatedSQLpool",
						"poolName": "dedicatedSQLpool"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Notebook_DLG')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "ApacheSparkPool",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "7608e48b-9ed6-4fd9-809c-91f1d05e91e4"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "sql"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/01debfb8-acc7-4607-855c-56bb0422e8d7/resourceGroups/DataBoboggan/providers/Microsoft.Synapse/workspaces/firstsynapsesorkspace/bigDataPools/ApacheSparkPool",
						"name": "ApacheSparkPool",
						"type": "Spark",
						"endpoint": "https://firstsynapsesorkspace.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/ApacheSparkPool",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.1",
						"nodeCount": 10,
						"cores": 8,
						"memory": 56
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "code",
						"metadata": {
							"microsoft": {
								"language": "python"
							},
							"collapsed": false
						},
						"source": [
							"%%pyspark\n",
							"blob_account_name = \"dlgstor\"\n",
							"blob_container_name = \"source\"\n",
							"from pyspark.sql import SparkSession\n",
							"\n",
							"sc = SparkSession.builder.getOrCreate()\n",
							"token_library = sc._jvm.com.microsoft.azure.synapse.tokenlibrary.TokenLibrary\n",
							"blob_sas_token = token_library.getConnectionString(\"LS_ABLB\")\n",
							"\n",
							"spark.conf.set(\n",
							"    'fs.azure.sas.%s.%s.blob.core.windows.net' % (blob_container_name, blob_account_name),\n",
							"    blob_sas_token)\n",
							"df = spark.read.load('wasbs://source@dlgstor.blob.core.windows.net/test/Customer Feedback.csv', format='csv'\n",
							"## If header exists uncomment line below\n",
							"##, header=True\n",
							")\n",
							"display(df.limit(10))"
						],
						"outputs": [],
						"execution_count": 1
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Notebook_DedicatedPool_DL')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "ApacheSparkPool",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "56g",
					"driverCores": 8,
					"executorMemory": "56g",
					"executorCores": 8,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "1a95761a-4326-4cee-9897-7a8dabd6ae90"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "scala"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/01debfb8-acc7-4607-855c-56bb0422e8d7/resourceGroups/DataBoboggan/providers/Microsoft.Synapse/workspaces/firstsynapsesorkspace/bigDataPools/ApacheSparkPool",
						"name": "ApacheSparkPool",
						"type": "Spark",
						"endpoint": "https://firstsynapsesorkspace.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/ApacheSparkPool",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.1",
						"nodeCount": 10,
						"cores": 8,
						"memory": 56
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "code",
						"metadata": {
							"microsoft": {
								"language": "scala"
							}
						},
						"source": [
							"%%spark\n",
							"val df = spark.read.sqlanalytics(\"dedicatedSQLpool.dbo.AzureDemo\") \n",
							"df.write.mode(\"overwrite\").saveAsTable(\"default.t2\")"
						],
						"outputs": [],
						"execution_count": 2
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ApacheSparkPool')]",
			"type": "Microsoft.Synapse/workspaces/bigDataPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"autoPause": {
					"enabled": false,
					"delayInMinutes": 15
				},
				"autoScale": {
					"enabled": true,
					"maxNodeCount": 8,
					"minNodeCount": 3
				},
				"nodeCount": 10,
				"nodeSize": "Medium",
				"nodeSizeFamily": "MemoryOptimized",
				"sparkVersion": "3.1",
				"isComputeIsolationEnabled": false,
				"sessionLevelPackagesEnabled": false,
				"annotations": []
			},
			"dependsOn": [],
			"location": "westeurope"
		}
	]
}